load_file("nrngui.hoc")
objectvar save_window_, rvp_
objectvar scene_vector_[5]
objectvar ocbox_, ocbox_list_, scene_, scene_list_
{ocbox_list_ = new List()  scene_list_ = new List()}
{pwman_place(0,0,0)}

//Begin PointProcessGroupManager
{
load_file("pointgrp.hoc")
}
{
ocbox_ = new PointProcessGroupManager(0)
}
{object_push(ocbox_)}
{
ms = new MechanismStandard("IClamp")
ms.set("del", 0, 0)
ms.set("dur", 0, 0)
ms.set("amp", 0, 0)
mnews("IClamp", ms)
select(0)
execute("somab ocbox_.move(0.5)")
}
{object_pop() doNotify()}
{
ocbox_ = ocbox_.v1
ocbox_.map("PointProcessGroupManager", 444, 493, 556.8, 295.68)
}
objref ocbox_
//End PointProcessGroupManager

{
xpanel("RunControl", 0)
v_init = -65
xvalue("Init","v_init", 1,"stdinit()", 1, 1 )
xbutton("Init & Run","run()")
xbutton("Stop","stoprun=1")
runStopAt = 5
xvalue("Continue til","runStopAt", 1,"{continuerun(runStopAt) stoprun=1}", 1, 1 )
runStopIn = 1
xvalue("Continue for","runStopIn", 1,"{continuerun(t + runStopIn) stoprun=1}", 1, 1 )
xbutton("Single Step","steprun()")
t = 0
xvalue("t","t", 2 )
tstop = 5000
xvalue("Tstop","tstop", 1,"tstop_changed()", 0, 1 )
dt = 0.025
xvalue("dt","dt", 1,"setdt()", 0, 1 )
steps_per_ms = 40
xvalue("Points plotted/ms","steps_per_ms", 1,"setdt()", 0, 1 )
xcheckbox("Quiet",&stdrun_quiet,"")
realtime = 0
xvalue("Real Time","realtime", 0,"", 0, 1 )
xpanel(25,476)
}
{
save_window_ = new Graph(0)
save_window_.size(0,5000,-80,40)
scene_vector_[2] = save_window_
{save_window_.view(0, -80, 5000, 120, 752, 107, 300.48, 200.32)}
graphList[0].append(save_window_)
save_window_.save_name("graphList[0].")
save_window_.addvar("somaa.v( 0.5 )", 2, 3, 0.8, 0.9, 2)
save_window_.addvar("somab.v( 0.5 )", 3, 3, 0.8, 0.9, 2)
}
{
save_window_ = new Graph(0)
save_window_.size(0,5000,-1,1)
scene_vector_[3] = save_window_
{save_window_.view(0, -1, 5000, 2, 407, 118, 300.48, 200.32)}
graphList[1].append(save_window_)
save_window_.save_name("graphList[1].")
save_window_.addvar("gap[0].i", 1, 1, 0.8, 0.9, 2)
save_window_.addvar("gap[1].i", 1, 1, 0.8, 0.9, 2)
}
objectvar scene_vector_[1]
{doNotify()}
